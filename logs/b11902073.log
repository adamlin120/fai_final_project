/home/ubitus03/miniconda3/envs/poker/lib/python3.8/site-packages/torch/cuda/__init__.py:118: UserWarning: CUDA initialization: CUDA driver initialization failed, you might not have a CUDA gpu. (Triggered internally at ../c10/cuda/CUDAFunctions.cpp:108.)
  return torch._C._cuda_getDeviceCount() > 0
Traceback (most recent call last):
  File "test.py", line 216, in <module>
    main(args.student_id)
  File "test.py", line 170, in main
    game_results = play_games(student_id, student_ai, f'baseline{i}', baseline_ai)
  File "test.py", line 95, in play_games
    {"name": student_id, "algorithm": student_ai()}
  File "/home/ubitus03/fai_final_project/./b11902073/agent.py", line 246, in setup_ai
    return DQNPlayer(h_size=128, is_main=is_main, is_double=is_double, is_restore=is_restore)
  File "/home/ubitus03/fai_final_project/./b11902073/agent.py", line 114, in __init__
    self.model.load_state_dict(torch.load(f'{dirname(__file__)}/model_base.pth'))
  File "/home/ubitus03/miniconda3/envs/poker/lib/python3.8/site-packages/torch/serialization.py", line 1025, in load
    return _load(opened_zipfile,
  File "/home/ubitus03/miniconda3/envs/poker/lib/python3.8/site-packages/torch/serialization.py", line 1446, in _load
    result = unpickler.load()
  File "/home/ubitus03/miniconda3/envs/poker/lib/python3.8/site-packages/torch/serialization.py", line 1416, in persistent_load
    typed_storage = load_tensor(dtype, nbytes, key, _maybe_decode_ascii(location))
  File "/home/ubitus03/miniconda3/envs/poker/lib/python3.8/site-packages/torch/serialization.py", line 1390, in load_tensor
    wrap_storage=restore_location(storage, location),
  File "/home/ubitus03/miniconda3/envs/poker/lib/python3.8/site-packages/torch/serialization.py", line 390, in default_restore_location
    result = fn(storage, location)
  File "/home/ubitus03/miniconda3/envs/poker/lib/python3.8/site-packages/torch/serialization.py", line 265, in _cuda_deserialize
    device = validate_cuda_device(location)
  File "/home/ubitus03/miniconda3/envs/poker/lib/python3.8/site-packages/torch/serialization.py", line 249, in validate_cuda_device
    raise RuntimeError('Attempting to deserialize object on a CUDA '
RuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.
